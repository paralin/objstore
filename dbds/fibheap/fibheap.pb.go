// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/aperturerobotics/objstore/dbds/fibheap/fibheap.proto

package fibheap

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Entry is an entry in the heap.
type Entry struct {
	// Degree is the degree of the entry.
	Degree int32 `protobuf:"varint,1,opt,name=degree" json:"degree,omitempty"`
	// Marked indicates if the entry is marked.
	Marked bool `protobuf:"varint,2,opt,name=marked" json:"marked,omitempty"`
	// Next is the pointer to the next entry.
	Next string `protobuf:"bytes,3,opt,name=next" json:"next,omitempty"`
	// Prev is the pointer to the previous entry.
	Prev string `protobuf:"bytes,4,opt,name=prev" json:"prev,omitempty"`
	// Child is the pointer to the child entry.
	Child string `protobuf:"bytes,5,opt,name=child" json:"child,omitempty"`
	// Parent is the pointer to the parent entry.
	Parent string `protobuf:"bytes,6,opt,name=parent" json:"parent,omitempty"`
	// Priority is the numerical priority of the entry.
	Priority             float64  `protobuf:"fixed64,7,opt,name=priority" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_fibheap_4fe1659dffa832e3, []int{0}
}
func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (dst *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(dst, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetDegree() int32 {
	if m != nil {
		return m.Degree
	}
	return 0
}

func (m *Entry) GetMarked() bool {
	if m != nil {
		return m.Marked
	}
	return false
}

func (m *Entry) GetNext() string {
	if m != nil {
		return m.Next
	}
	return ""
}

func (m *Entry) GetPrev() string {
	if m != nil {
		return m.Prev
	}
	return ""
}

func (m *Entry) GetChild() string {
	if m != nil {
		return m.Child
	}
	return ""
}

func (m *Entry) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Entry) GetPriority() float64 {
	if m != nil {
		return m.Priority
	}
	return 0
}

// Root is the root object of the heap.
type Root struct {
	// Min is the pointer to the current minimum item.
	Min string `protobuf:"bytes,1,opt,name=min" json:"min,omitempty"`
	// MinPriority is the priority of the current minimum item.
	MinPriority float64 `protobuf:"fixed64,2,opt,name=min_priority,json=minPriority" json:"min_priority,omitempty"`
	// Size is the current size of the heap.
	Size                 uint32   `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Root) Reset()         { *m = Root{} }
func (m *Root) String() string { return proto.CompactTextString(m) }
func (*Root) ProtoMessage()    {}
func (*Root) Descriptor() ([]byte, []int) {
	return fileDescriptor_fibheap_4fe1659dffa832e3, []int{1}
}
func (m *Root) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Root.Unmarshal(m, b)
}
func (m *Root) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Root.Marshal(b, m, deterministic)
}
func (dst *Root) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Root.Merge(dst, src)
}
func (m *Root) XXX_Size() int {
	return xxx_messageInfo_Root.Size(m)
}
func (m *Root) XXX_DiscardUnknown() {
	xxx_messageInfo_Root.DiscardUnknown(m)
}

var xxx_messageInfo_Root proto.InternalMessageInfo

func (m *Root) GetMin() string {
	if m != nil {
		return m.Min
	}
	return ""
}

func (m *Root) GetMinPriority() float64 {
	if m != nil {
		return m.MinPriority
	}
	return 0
}

func (m *Root) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto.RegisterType((*Entry)(nil), "fibheap.Entry")
	proto.RegisterType((*Root)(nil), "fibheap.Root")
}

func init() {
	proto.RegisterFile("github.com/aperturerobotics/objstore/dbds/fibheap/fibheap.proto", fileDescriptor_fibheap_4fe1659dffa832e3)
}

var fileDescriptor_fibheap_4fe1659dffa832e3 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0x41, 0x4e, 0xc3, 0x30,
	0x10, 0x45, 0xe5, 0x36, 0x49, 0x5b, 0x03, 0x12, 0xb2, 0x10, 0xb2, 0x58, 0x85, 0xae, 0xb2, 0x6a,
	0x16, 0x1c, 0x80, 0x15, 0x6b, 0x90, 0x2f, 0x80, 0xe2, 0x64, 0x68, 0x0c, 0xc4, 0x63, 0x4d, 0xa6,
	0x88, 0x72, 0x23, 0x6e, 0x89, 0xec, 0x9a, 0xae, 0xfc, 0xdf, 0x93, 0xbe, 0xf5, 0x35, 0xf2, 0x71,
	0xef, 0x78, 0x3c, 0xd8, 0x5d, 0x8f, 0x53, 0xdb, 0x05, 0x20, 0x3e, 0x10, 0x10, 0x5a, 0x64, 0xd7,
	0xcf, 0x2d, 0xda, 0xf7, 0x99, 0x91, 0xa0, 0x1d, 0xec, 0x30, 0xb7, 0x6f, 0xce, 0x8e, 0xd0, 0x85,
	0xff, 0x77, 0x17, 0x08, 0x19, 0xd5, 0x2a, 0xe3, 0xf6, 0x57, 0xc8, 0xf2, 0xc9, 0x33, 0x1d, 0xd5,
	0xad, 0xac, 0x06, 0xd8, 0x13, 0x80, 0x16, 0xb5, 0x68, 0x4a, 0x93, 0x29, 0xfa, 0xa9, 0xa3, 0x0f,
	0x18, 0xf4, 0xa2, 0x16, 0xcd, 0xda, 0x64, 0x52, 0x4a, 0x16, 0x1e, 0xbe, 0x59, 0x2f, 0x6b, 0xd1,
	0x6c, 0x4c, 0xca, 0xd1, 0x05, 0x82, 0x2f, 0x5d, 0x9c, 0x5c, 0xcc, 0xea, 0x46, 0x96, 0xfd, 0xe8,
	0x3e, 0x07, 0x5d, 0x26, 0x79, 0x82, 0xf8, 0x6b, 0xe8, 0x08, 0x3c, 0xeb, 0x2a, 0xe9, 0x4c, 0xea,
	0x4e, 0xae, 0x03, 0x39, 0x24, 0xc7, 0x47, 0xbd, 0xaa, 0x45, 0x23, 0xcc, 0x99, 0xb7, 0xcf, 0xb2,
	0x30, 0x88, 0xac, 0xae, 0xe5, 0x72, 0x72, 0x3e, 0xcd, 0xdc, 0x98, 0x18, 0xd5, 0xbd, 0xbc, 0x9c,
	0x9c, 0x7f, 0x3d, 0x37, 0x17, 0xa9, 0x79, 0x31, 0x39, 0xff, 0x92, 0x55, 0x9c, 0x36, 0xbb, 0x1f,
	0x48, 0x73, 0xaf, 0x4c, 0xca, 0xb6, 0x4a, 0xc7, 0x78, 0xf8, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xda,
	0x75, 0x62, 0xff, 0x4f, 0x01, 0x00, 0x00,
}
